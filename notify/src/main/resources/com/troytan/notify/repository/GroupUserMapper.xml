<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.troytan.notify.repository.GroupUserMapper">
  <resultMap id="BaseResultMap" type="com.troytan.notify.domain.GroupUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="GROUP_USER_ID" jdbcType="INTEGER" property="groupUserId" />
    <result column="NICKNAME" jdbcType="VARCHAR" property="nickname" />
    <result column="STATUS" jdbcType="SMALLINT" property="status" />
    <result column="CREATE_BY" jdbcType="INTEGER" property="createBy" />
    <result column="CREATE_ON" jdbcType="TIMESTAMP" property="createOn" />
    <result column="UPDATE_BY" jdbcType="INTEGER" property="updateBy" />
    <result column="UPDATE_ON" jdbcType="TIMESTAMP" property="updateOn" />
    <result column="GROUP_ID" jdbcType="VARCHAR" property="groupId" />
    <result column="OPEN_ID" jdbcType="VARCHAR" property="openId" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from tt_group_user
    where GROUP_USER_ID = #{groupUserId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.troytan.notify.domain.GroupUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="groupUserId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tt_group_user (NICKNAME, STATUS, CREATE_BY, 
      CREATE_ON, UPDATE_BY, UPDATE_ON, 
      GROUP_ID, OPEN_ID)
    values (#{nickname,jdbcType=VARCHAR}, #{status,jdbcType=SMALLINT}, #{createBy,jdbcType=INTEGER}, 
      now(), #{updateBy,jdbcType=INTEGER}, #{updateOn,jdbcType=TIMESTAMP}, 
      #{groupId,jdbcType=VARCHAR}, #{openId,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.troytan.notify.domain.GroupUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tt_group_user
    set NICKNAME = #{nickname,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=SMALLINT},
      CREATE_BY = #{createBy,jdbcType=INTEGER},
      CREATE_ON = #{createOn,jdbcType=TIMESTAMP},
      UPDATE_BY = #{updateBy,jdbcType=INTEGER},
      UPDATE_ON = now(),
      GROUP_ID = #{groupId,jdbcType=VARCHAR},
      OPEN_ID = #{openId,jdbcType=VARCHAR}
    where GROUP_USER_ID = #{groupUserId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select GROUP_USER_ID, NICKNAME, STATUS, CREATE_BY, CREATE_ON, UPDATE_BY, UPDATE_ON, 
    GROUP_ID, OPEN_ID
    from tt_group_user
    where GROUP_USER_ID = #{groupUserId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select GROUP_USER_ID, NICKNAME, STATUS, CREATE_BY, CREATE_ON, UPDATE_BY, UPDATE_ON, 
    GROUP_ID, OPEN_ID
    from tt_group_user
  </select>
  
  <resultMap id="GroupUserDtoResultMap" type="com.troytan.notify.dto.GroupUserDto">
    <id column="GROUP_USER_ID" jdbcType="INTEGER" property="groupUserId" />
    <result column="GROUP_ID" jdbcType="VARCHAR" property="groupId" />
    <result column="OPEN_ID" jdbcType="VARCHAR" property="openId" />
    <result column="NICKNAME" jdbcType="VARCHAR" property="nickname" />
  </resultMap>
  <select id="listGroupUsers" resultMap="GroupUserDtoResultMap">
    select gu.GROUP_USER_ID, gu.GROUP_ID,gu.OPEN_ID, 
        ifnull(gu.NICKNAME,user.NICKNAME) as NICKNAME
	from tt_group_user gu
	left join tm_user user on user.OPEN_ID = gu.OPEN_ID
	where gu.STATUS=1 and  user.USER_ID = #{userId,jdbcType=INTEGER}
  </select>
  <update id="updateBatch" parameterType="java.util.List">
    update tt_group_user
    set NICKNAME = case GROUP_USER_ID
    <foreach collection="list" item="item">
        when #{item.groupUserId, jdbcType=INTEGER} then to_base64(#{item.nickname,jdbcType=VARCHAR})
    </foreach>
    end
    where GROUP_USER_ID in
    <foreach collection="list" item="item" open="(" close=")" separator=",">
        #{item.groupUserId, jdbcType=INTEGER}
    </foreach>
  </update>
  <select id="selectByGroupAndOpenId" resultMap="BaseResultMap">
    select GROUP_USER_ID, NICKNAME, STATUS, CREATE_BY, CREATE_ON, UPDATE_BY, UPDATE_ON, 
        GROUP_ID, OPEN_ID
    from tt_group_user
    where GROUP_ID = #{item.groupId,jdbcType=VARCHAR} 
        and OPEN_ID=#{item.openId,jdbcType=VARCHAR}
  </select>
</mapper>