<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.troytan.notify.repository.NotifyMapper">
  <resultMap id="BaseResultMap" type="com.troytan.notify.domain.Notify">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="NOTIFY_ID" jdbcType="INTEGER" property="notifyId" />
    <result column="TITLE" jdbcType="VARCHAR" property="title" />
    <result column="CONTENT" jdbcType="VARCHAR" property="content" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="STATUS" jdbcType="SMALLINT" property="status" />
    <result column="GROUP_ID" jdbcType="VARCHAR" property="groupId" />
    <result column="CREATE_BY" jdbcType="INTEGER" property="createBy" />
    <result column="CREATE_ON" jdbcType="TIMESTAMP" property="createOn" />
    <result column="UPDATE_BY" jdbcType="INTEGER" property="updateBy" />
    <result column="UPDATE_ON" jdbcType="TIMESTAMP" property="updateOn" />
    <result column="SCOPE" jdbcType="SMALLINT" property="scope" />
    <result column="OWNER" jdbcType="INTEGER" property="owner" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from tt_notify
    where NOTIFY_ID = #{notifyId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.troytan.notify.domain.Notify">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="notifyId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tt_notify (TITLE, CONTENT, NAME, 
      STATUS, GROUP_ID, CREATE_BY, 
      CREATE_ON, UPDATE_BY, UPDATE_ON, 
      SCOPE, OWNER)
    values (#{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, to_base64(#{name,jdbcType=VARCHAR}), 
      #{status,jdbcType=SMALLINT}, #{groupId,jdbcType=VARCHAR}, #{createBy,jdbcType=INTEGER}, 
      now(), #{updateBy,jdbcType=INTEGER}, #{updateOn,jdbcType=TIMESTAMP}, 
      #{scope,jdbcType=SMALLINT}, #{owner,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.troytan.notify.domain.Notify">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tt_notify
    set TITLE = #{title,jdbcType=VARCHAR},
      CONTENT = #{content,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=SMALLINT},
      GROUP_ID = #{groupId,jdbcType=VARCHAR},
      CREATE_BY = #{createBy,jdbcType=INTEGER},
      CREATE_ON = #{createOn,jdbcType=TIMESTAMP},
      UPDATE_BY = #{updateBy,jdbcType=INTEGER},
      UPDATE_ON = #{updateOn,jdbcType=TIMESTAMP},
      SCOPE = #{scope,jdbcType=SMALLINT},
      OWNER = #{owner,jdbcType=INTEGER}
    where NOTIFY_ID = #{notifyId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select NOTIFY_ID, TITLE, CONTENT, NAME, STATUS, GROUP_ID, CREATE_BY, CREATE_ON, UPDATE_BY, 
    UPDATE_ON, SCOPE, OWNER
    from tt_notify
    where NOTIFY_ID = #{notifyId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select NOTIFY_ID, TITLE, CONTENT, NAME, STATUS, GROUP_ID, CREATE_BY, CREATE_ON, UPDATE_BY, 
    UPDATE_ON, SCOPE, OWNER
    from tt_notify
  </select>
  
  <update id="updateBySelective" parameterType="com.troytan.notify.domain.Notify">
     update tt_notify
     set  <if test="title != null">
                TITLE = #{title,jdbcType=VARCHAR},
          </if>
          <if test="content != null">
	           CONTENT = #{content,jdbcType=VARCHAR},
	      </if>
	      <if test="name != null">
	           NAME = to_base64(#{name,jdbcType=VARCHAR}),
	      </if>
	      <if test="status != null">
	           STATUS = #{status,jdbcType=SMALLINT},
	      </if>
	      <if test="scope != null">
	           SCOPE = #{scope,jdbcType=SMALLINT},
	      </if>
	      UPDATE_BY = #{updateBy,jdbcType=INTEGER},
	      UPDATE_ON = now()
     where NOTIFY_ID = #{notifyId,jdbcType=INTEGER}
  </update>
  <!-- 根据userId获取通知对象 -->
  <select id="selectByUserAndNotify" resultMap="BaseResultMap">
    select distinct notify.*
    from tt_notify notify
    left join tt_group_user gu on gu.GROUP_ID=notify.GROUP_ID
    where notify.NOTIFY_ID = #{notifyId, jdbcType=INTEGER} and
       (notify.SCOPE=0 
            or notify.OWNER=#{userId,jdbcType=INTEGER} 
            or gu.OPEN_ID = (select OPEN_ID from tm_user where USER_ID=#{userId,jdbcType=INTEGER})) 
  </select>

  <resultMap id="NotifyDtoResultMap" type="com.troytan.notify.dto.NotifyDto">
    <id column="NOTIFY_ID" jdbcType="INTEGER" property="notifyId" />
    <result column="TITLE" jdbcType="VARCHAR" property="title" />
    <result column="CONTENT" jdbcType="VARCHAR" property="content" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="CREATE_ON" jdbcType="TIMESTAMP" property="sendOn" />
    <result column="AVATAR_URL" jdbcType="VARCHAR" property="avatarUrl" />
    <result column="NICKNAME" jdbcType="VARCHAR" property="nickName" />
    <result column="COMMENT_COUNT" jdbcType="INTEGER" property="commentCount" />
    <result column="CONFIRM_COUNT" jdbcType="INTEGER" property="confirmCount" />
    <result column="VIEW_COUNT" jdbcType="INTEGER" property="viewCount" />
    <result column="SCOPE" jdbcType="SMALLINT" property="scope" />
  </resultMap>
  <!-- 获取发送列表 -->
  <select id="listSendNotifyByUserId" parameterType="java.lang.Integer" resultMap="NotifyDtoResultMap">
    select notify.NOTIFY_ID,notify.TITLE,notify.CONTENT,notify.NAME as NAME,notify.CREATE_ON,notify.SCOPE,
        user.AVATAR_URL,user.NICKNAME,
		count(distinct comment.COMMENT_ID) as COMMENT_COUNT, 
		count(distinct confirm.CONFIRM_ID) as CONFIRM_COUNT,
		count(distinct vi.CONFIRM_ID) as VIEW_COUNT
	from tt_notify notify
	left join tm_user user on user.USER_ID = notify.CREATE_BY
	left join (select CONFIRM_ID,NOTIFY_ID from tt_confirm where status =2) confirm on confirm.NOTIFY_ID = notify.NOTIFY_ID
	left join (select CONFIRM_ID,NOTIFY_ID from tt_confirm where status &gt;=1) vi on vi.NOTIFY_ID = notify.NOTIFY_ID
	left join tt_comment comment on comment.NOTIFY_ID = notify.NOTIFY_ID
	where notify.OWNER = #{userId,jdbcType=INTEGER} and notify.STATUS in(1,10)
	group by notify.NOTIFY_ID
	order by notify.CREATE_on desc
  </select>
  <!-- 获取接收列表 -->
  <select id="listReceiveNotifyByUserId" parameterType="java.lang.Integer" resultMap="NotifyDtoResultMap">
    select notify.NOTIFY_ID,notify.TITLE,notify.CONTENT,notify.CREATE_ON,user.AVATAR_URL,user.NICKNAME,
		count(distinct comment.COMMENT_ID) as comment_count, 
		count(distinct confirm.CONFIRM_ID) as confirm_count,
		count(distinct vi.CONFIRM_ID) as view_count
	from tt_notify notify
	left join tr_notify_user nu on nu.NOTIFY_ID = notify.NOTIFY_ID
	left join tm_user user on user.USER_ID = notify.CREATE_BY
	left join (select CONFIRM_ID,NOTIFY_ID from tt_confirm where status =2) confirm on confirm.NOTIFY_ID = notify.NOTIFY_ID
	left join (select CONFIRM_ID,NOTIFY_ID from tt_confirm where status &gt;=1) vi on vi.NOTIFY_ID = notify.NOTIFY_ID
	left join tt_comment comment on comment.NOTIFY_ID = notify.NOTIFY_ID
	where nu.user_id = #{userId,jdbcType=INTEGER} and notify.STATUS in(1,10)
	group by notify.NOTIFY_ID
	order by notify.CREATE_on desc
  </select>
  <update id="updateStatusByNotifyId">
     update tt_notify set status=#{status, jdbcType=SMALLINT},
        UPDATE_BY=#{userId, jdbcType=INTEGER}, UPDATE_ON=now()
     where NOTIFY_ID=#{notifyId, jdbcType=INTEGER}
  </update>
</mapper>